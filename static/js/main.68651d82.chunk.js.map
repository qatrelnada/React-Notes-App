{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","id","text","date","handleDelNote","className","onClick","size","AddNote","handleAddNote","useState","noteText","setNoteText","rows","cols","placeholder","value","onChange","event","target","length","trim","NotesList","notes","map","note","Search","handleSearchNote","Header","handleToggleDarkMode","previousDarkMode","App","nanoid","setNotes","searchText","setSearchText","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68651d82.chunk.js","sourcesContent":["import { MdDeleteForever } from 'react-icons/md'\r\n\r\nconst Note = ({ id, text, date, handleDelNote }) => {\r\n    return (\r\n        <div className='note'>\r\n            <span>{text}</span>\r\n            <div className='note-footer'>\r\n                <small>{date}</small>\r\n                <MdDeleteForever \r\n                    onClick={() => handleDelNote(id)} \r\n                    className='delete-icon' \r\n                    size='1.5em' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note;","import { useState } from 'react';\r\n\r\nconst AddNote = ({ handleAddNote }) => {\r\n    const [noteText, setNoteText] = useState('');\r\n    const characterLimit = 200;\r\n\r\n    const handleChange = (event) => {\r\n        // console.log(event.target.value);\r\n        if(characterLimit - event.target.value.length >=0) {\r\n            setNoteText(event.target.value);\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        if(noteText.trim().length > 0) {\r\n            handleAddNote(noteText);\r\n            setNoteText('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='note new'>\r\n            <textarea \r\n                rows='8'\r\n                cols='10' \r\n                placeholder='Type to add a note.'\r\n                value={noteText}\r\n                onChange={handleChange}>\r\n            </textarea>\r\n            <div className='note-footer'>\r\n                <small>{characterLimit - noteText.length} Remaining</small>\r\n                <button className='btn' onClick={handleClick}>Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNote;","import Note from './Note';\r\nimport AddNote from './AddNote';\r\n\r\nconst NotesList = ({ notes, handleAddNote, handleDelNote }) => {\r\n    return (\r\n        <div className='notes-list'>\r\n            {notes.map((note) => (\r\n            <Note \r\n                id={note.id} \r\n                text={note.text} \r\n                date={note.date} \r\n                handleDelNote={handleDelNote}/>\r\n            ))}\r\n            <AddNote handleAddNote={handleAddNote}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesList;","import React from 'react';\r\nimport { MdSearch } from 'react-icons/md'\r\n\r\nconst Search = ({ handleSearchNote }) => {\r\n    return <div className='search'>\r\n        <MdSearch className='search-icon' size='1.5em' />\r\n        <input \r\n            onChange={(event) => handleSearchNote(event.target.value)}\r\n            placeholder='Type to search.'></input>\r\n    </div>;\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nconst Header = ({ handleToggleDarkMode }) => {\r\n    return (\r\n        <div className='header'>\r\n            <h1>Notes</h1>\r\n            <button \r\n                className='btn'\r\n                onClick={() => handleToggleDarkMode(\r\n                    (previousDarkMode) => !previousDarkMode\r\n                    )\r\n                }>Toggle Mode</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport NotesList from './components/NotesList';\nimport Search from './components/Search';\nimport Header from './components/Header';\n\nconst App = () => {\n  const [notes, setNotes] = useState([{\n    id: nanoid(),\n    text: \"This's my first note.\",\n    date: \"16/12/2021\"\n  },\n  {\n    id: nanoid(),\n    text: \"This's my second note.\",\n    date: \"16/12/2021\"\n  },\n  {\n    id: nanoid(),\n    text: \"This's my third note.\",\n    date: \"16/12/2021\"\n  }]);\n\n  const [searchText, setSearchText] = useState('');\n\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const savedNotes = JSON.parse(\n      localStorage.getItem('react-notes-app-data')\n      );\n\n      if (savedNotes) {\n        setNotes(savedNotes);\n      }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\n      'react-notes-app-data', \n      JSON.stringify(notes)\n    );\n  }, [notes]); // Dependency array\n\n  const addNote = (text) => {\n    // console.log(text);\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    }\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  }\n\n  const delNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  }\n\n  return (\n    <div className={`${darkMode && 'dark-mode'}`}>\n      <div className='container'>\n        <Header \n          handleToggleDarkMode={setDarkMode} />\n        <Search \n          handleSearchNote={setSearchText} />\n        <NotesList \n          notes={notes.filter((note) => note.text.toLowerCase().includes(searchText))} \n          handleAddNote={addNote}\n          handleDelNote={delNote} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}